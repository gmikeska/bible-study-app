<div class="component-select">
  <% if(component.present?) %>
    <%= form.select("components[][name]".to_sym, component_options, {selected:component[:name], label:"Component Type",include_blank:"Select a component type..."}, class:"componentType") %>
    <div class="component-preview" style="zoom:.8">
      <%= render("component_preview", component:component) %>
    </div>
    <div class="settings">
      <%= render("component_settings",form:form, component:component) %>
    </div>
  <% elsif(index == 0) %>
    <%= form.select "components[][name]".to_sym, component_options, {label:"Component Type", include_blank:"Select a component type..."}, class:"componentType" %>
    <div class="component-preview" style="zoom:.8">
    </div>
    <div class="settings">
    </div>
  <% end %>
</div>
<script type="text/javascript">
  $("select",".component").change((e)=>{
    wrapper = e.currentTarget.parentElement.parentElement
    setInputHandlers(wrapper)
    updatePreview(wrapper,e.currentTarget.value)
    loadSettings(wrapper,e.currentTarget.value)
  })
  updatePreview = (wrapper,componentName)=>{
    args = $("input",wrapper)
    formData = {}
    varSearch = new RegExp('page_components\\[\\]\\[args\\]\\[(\\w+)\\]');

    $("input",wrapper).each(function(x){
      argName = this.id.match(varSearch)[1]
      formData[argName] = $(this).val()
      // console.log(`${this.id}=${$(this).val()}`)
    })
    $.post({
          url: `/component/${componentName}`,
          data:{args:formData},
          success:(data)=>{
            prev = $(".component-preview",wrapper)
            prev.empty()
            prev.append(data)
          }
      });
  }
  loadSettings = (wrapper,componentName)=>{
    $.ajax({
          url: `/component/${componentName}/settings`,
          type: "GET",
          success:(data)=>{
            el = $(data)
            lines = el.html().split("\n").slice(1)
            settings = $(".settings",wrapper)
            settings.empty()
            settings.append(lines)
          }
      });
  }
  setInputHandlers = (wrapper)=>{
    $("input",wrapper).change(()=>{
      componentName = $(".componentType",wrapper)[0].value
      updatePreview(wrapper,componentName)
    })
  }
  $("body").ready(()=>{
    $(".component-select").each(function(w){
      setInputHandlers(this)
    })
  })
</script>
